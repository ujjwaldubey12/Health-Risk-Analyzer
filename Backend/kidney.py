# -*- coding: utf-8 -*-
"""Kidney.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1WCPRCH7ByzPld0Z_0OhNvrCJ1BYHQcUG
"""

#random forest
import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score
from sklearn.preprocessing import StandardScaler

# importing Flask and other modules
from flask import Flask, request, render_template, send_from_directory
 
# Flask constructor
app = Flask(__name__)  

df = pd.read_csv(r'kidney.csv')

# Check for null values
df.replace('?', np.nan, inplace=True)
df=df.dropna()

X = df.drop(['classification'], axis=1)

y = df['classification']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

scaler = StandardScaler()
X_train_scaled = scaler.fit_transform(X_train)

# Train the random forest classifier
rf = RandomForestClassifier(n_estimators=100, random_state=42)
rf.fit(X_train_scaled, y_train)

# Make predictions on the test set
y_pred = rf.predict(X_test)

# Evaluate the accuracy of the model
accuracy = accuracy_score(y_test, y_pred)
print('Accuracy:', accuracy)

@app.route('/kidney', methods =["GET", "POST"])
def kidney():
    print("Serving")
    if request.method == "POST":
        # getting input with name = fname in HTML form
        para_value_a = request.form.get("")
        print(request.form)
        l = []
        for key,value in request.form.to_dict(flat=False).items():
            print (key, type(value))
            l += value
        l = scaler.transform([l])
        kidney_result= rf.predict(l)
        if kidney_result == [0]:
            return "Based on the information you provided, our preliminary screening tool indicates that you may have a Kidney Disease. Please seek medical advice from a qualified healthcare professional for further evaluation and testing."
            # return "Your result is:" + str(rfc.predict([l]))
        else:
            return "Our prediction model suggests that you don't have a Kidney Disease. Nevertheless, we recommend that you speak to a healthcare professional if you have any concerns about your health."

@app.route('/<path:path>', methods =["GET", "POST"])
def paraphrase(path):
    print("Serving 2")
    print(path)
    return send_from_directory("Front end", path)


if __name__=='__main__':
   app.run(debug=True)
